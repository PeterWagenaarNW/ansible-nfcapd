---
- name: install essential packages for this task
  become: True
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=1200
  with_items:
    - nfdump
    - psmisc
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
  register: result
  
- name: create target directory
  file: >
    path={{ nfcapd_logdir }}
    state=directory
    recurse=yes
    owner={{ item.owner }}
    group={{ item.group }}
    mode={{ item.mode }}
  with_items:
    - "{{ nfcapd_logdir_perms }}"
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
  register: result

- name: modify pid directory permissions
  file: >
    path={{ nfcapd_pid_filepath | dirname }}
    state=directory
    owner={{ item.user }}
    mode="o+rwX"
  with_items:
    - "{{ nfcapd_daemon_uidgid }}"
  register: result
  
- name: modify nfdump.service
  lineinfile: >
    path={{ nfcapd_systemd_filepath }}
    regexp="^ExecStart=/usr/bin/nfcapd"
    line="ExecStart={{ nfcapd_bin_filepath }} -D -l {{ nfcapd_logdir }} -P {{ nfcapd_pid_filepath }} -p {{ nfcapd_port }} -S {{ nfcapd_subdir_type }}  -b {{ nfcapd_listen_address }}"
  notify:
    - killall nfdump.service
    - restart nfdump.service
    - killall fprobe.service
    - restart fprobe.service
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
  register: result

- name: enable chuser and chgroup option
  lineinfile: >
    path={{ nfcapd_systemd_filepath }}
    regexp="^ExecStart=/usr/bin/nfcapd"
    line="ExecStart={{ nfcapd_bin_filepath }} -D -l {{ nfcapd_logdir }} -P {{ nfcapd_pid_filepath }} -p {{ nfcapd_port }} -S {{ nfcapd_subdir_type }} -u {{ item.user }} -g {{ item.group }} -b {{ nfcapd_listen_address }}"
  notify:
    - killall nfdump.service
    - restart nfdump.service
    - killall fprobe.service
    - restart fprobe.service
  when: (ansible_distribution == "Ubuntu" or ansible_distribution == "Debian") and
        (item.user != "root" and item.group != "root")
  with_items:
    - "{{ nfcapd_daemon_uidgid }}"
  register: result
  
- name: modify daemon setting in /etc/default/nfdump
  lineinfile: >
    path={{ nfcapd_default_filepath }}
    regexp="^nfcapd_start="
    line="nfcapd_start=no"
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
  register: result

- name: enable nfcapd service
  systemd:
    name: nfdump
    state: started
    enabled: true
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
  register: result
